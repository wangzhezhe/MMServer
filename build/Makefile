ROOT_PATH = /ilab/users/zw241/cworkspace
PATH_PROTO = $(ROOT_PATH)/build_protobuf
PATH_GRPC = $(ROOT_PATH)/build_grpc
INCLUDE_DEPS = $(ROOT_PATH)/MMServer/deps
INCLUDE_BUILD = $(ROOT_PATH)/MMServer/build

HOST_SYSTEM = $(shell uname | cut -f 1 -d_)
SYSTEM ?= $(HOST_SYSTEM)
CXX = g++ -std=c++11 -I$(PATH_PROTO)/include -I$(PATH_GRPC)/include -I$(INCLUDE_DEPS) -I$(INCLUDE_BUILD)
CPPFLAGS += `pkg-config --cflags protobuf grpc`


LDFLAGS += -L$(PATH_GRPC)/lib -L$(PATH_PROTO)/lib -Wl,-rpath $(PATH_GRPC)/lib -Wl,-rpath $(PATH_PROTO)/lib `pkg-config --libs protobuf grpc++ grpc`\
           -Wl,--no-as-needed -lgrpc++_reflection -Wl,--as-needed\
           -ldl -lpthread -lgpr -luuid -fopenmp -luuid 
		   
PROTOC = $(PATH_PROTO)/bin/protoc
GRPC_CPP_PLUGIN = $(PATH_GRPC)/bin/grpc_cpp_plugin

PROTOS_PATH = ../protos

vpath %.proto $(PROTOS_PATH)

all: metaserver metaclient

ipTool.o:
	$(CXX) $(CPPFLAGS) -c -o ipTool.o ../utils/ipTool.cpp


metaserver: metaserver.pb.o metaserver.grpc.pb.o ipTool.o ../metaserver.cc
	$(CXX) $^ $(CPPFLAGS) $(LDFLAGS) -o $@

metaclient: metaserver.pb.o metaserver.grpc.pb.o ipTool.o ../metaclient.cc
	$(CXX) $^ $(CPPFLAGS) $(LDFLAGS) -o $@

.PRECIOUS: %.grpc.pb.cc
%.grpc.pb.cc: %.proto
	$(PROTOC) -I$(PROTOS_PATH) --grpc_out=. --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN) $<

.PRECIOUS: %.pb.cc
%.pb.cc: %.proto
	$(PROTOC) -I$(PROTOS_PATH) --cpp_out=. $<

clean:
	rm -rf *.o *.pb.cc *.pb.h metaserver metaclient


# The following is to test your system and ensure a smoother experience.
# They are by no means necessary to actually compile a grpc-enabled software.

PROTOC_CMD = which $(PROTOC)
PROTOC_CHECK_CMD = $(PROTOC) --version | grep -q libprotoc.3
PLUGIN_CHECK_CMD = which $(GRPC_CPP_PLUGIN)
HAS_PROTOC = $(shell $(PROTOC_CMD) > /dev/null && echo true || echo false)
ifeq ($(HAS_PROTOC),true)
HAS_VALID_PROTOC = $(shell $(PROTOC_CHECK_CMD) 2> /dev/null && echo true || echo false)
endif
HAS_PLUGIN = $(shell $(PLUGIN_CHECK_CMD) > /dev/null && echo true || echo false)

SYSTEM_OK = false
ifeq ($(HAS_VALID_PROTOC),true)
ifeq ($(HAS_PLUGIN),true)
SYSTEM_OK = true
endif
endif

system-check:
ifneq ($(HAS_VALID_PROTOC),true)
	@echo " DEPENDENCY ERROR"
	@echo
	@echo "You don't have protoc 3.0.0 installed in your path."
	@echo "Please install Google protocol buffers 3.0.0 and its compiler."
	@echo "You can find it here:"
	@echo
	@echo "   https://github.com/google/protobuf/releases/tag/v3.0.0"
	@echo
	@echo "Here is what I get when trying to evaluate your version of protoc:"
	@echo
	-$(PROTOC) --version
	@echo
	@echo
endif
ifneq ($(HAS_PLUGIN),true)
	@echo " DEPENDENCY ERROR"
	@echo
	@echo "You don't have the grpc c++ protobuf plugin installed in your path."
	@echo "Please install grpc. You can find it here:"
	@echo
	@echo "   https://github.com/grpc/grpc"
	@echo
	@echo "Here is what I get when trying to detect if you have the plugin:"
	@echo
	-which $(GRPC_CPP_PLUGIN)
	@echo
	@echo
endif
ifneq ($(SYSTEM_OK),true)
	@false
endif
